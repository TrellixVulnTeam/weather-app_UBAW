[{"E:\\React_Projects\\weather-app\\src\\index.js":"1","E:\\React_Projects\\weather-app\\src\\reportWebVitals.js":"2","E:\\React_Projects\\weather-app\\src\\App.jsx":"3","E:\\React_Projects\\weather-app\\src\\components\\top\\top.jsx":"4","E:\\React_Projects\\weather-app\\src\\components\\bottom\\bottom.jsx":"5","E:\\React_Projects\\weather-app\\src\\components\\top\\weather.jsx":"6","E:\\React_Projects\\weather-app\\src\\store.js":"7"},{"size":512,"mtime":1623391905125,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2110,"mtime":1625059429394,"results":"11","hashOfConfig":"9"},{"size":2937,"mtime":1623396118082,"results":"12","hashOfConfig":"9"},{"size":333,"mtime":1623047247581,"results":"13","hashOfConfig":"9"},{"size":727,"mtime":1623305044170,"results":"14","hashOfConfig":"9"},{"size":556,"mtime":1623338486153,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"14khkh7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"E:\\React_Projects\\weather-app\\src\\index.js",[],["33","34"],"E:\\React_Projects\\weather-app\\src\\reportWebVitals.js",[],"E:\\React_Projects\\weather-app\\src\\App.jsx",[],"E:\\React_Projects\\weather-app\\src\\components\\top\\top.jsx",["35"],"import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Weather from \"./weather\"\r\n\r\nimport { Manager, Reference, Popper } from \"react-popper\";\r\n\r\nexport default class TopSection extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isSelectLocationOpen: false\r\n        };\r\n    }\r\n\r\n    onToggleSelectLocation() {\r\n        this.setState(prevState => ({\r\n          isSelectLocationOpen: !prevState.isSelectLocationOpen\r\n        }));\r\n      }\r\n    \r\n      onLocationNameChange(e) {\r\n        this.setState({ locationName: e.target.value });\r\n      }\r\n    \r\n      onSelectCity() {\r\n        const { locationName } = this.state;\r\n        const { eventEmitter } = this.props;\r\n        eventEmitter.emit(\"updateWeather\", locationName);\r\n        this.setState({ isSelectLocationOpen: false });\r\n      }\r\n\r\n    render() {\r\n        const { isSelectLocationOpen } = this.state;\r\n        const { eventEmitter } = this.props;\r\n       \r\n        return (\r\n            <div className=\"top-container\">\r\n              <div className=\"title\">Weather App</div>\r\n              <Weather {...this.props} />\r\n              <Manager>\r\n                <Reference>\r\n                  {({ ref }) => (\r\n                    <button\r\n                      className=\"btn btn-select-location\"\r\n                      ref={ref}\r\n                      onClick={this.onToggleSelectLocation.bind(this)}\r\n                    >\r\n                      Select Location\r\n                    </button>\r\n                  )}\r\n                </Reference>\r\n                <Popper placement=\"top\">\r\n                  {({ ref, style, placement, arrowProps }) =>\r\n                    isSelectLocationOpen && (\r\n                      <div\r\n                        className=\"popup-container\"\r\n                        ref={ref}\r\n                        style={style}\r\n                        data-placement={placement}\r\n                      >\r\n                        <div className=\"form-container\">\r\n                          <label htmlFor=\"location-name\">Location Name</label>\r\n                          <input\r\n                            id=\"location-name\"\r\n                            type=\"text\"\r\n                            placeholder=\"City Name\"\r\n                            onChange={this.onLocationNameChange.bind(this)}\r\n                          />\r\n                          <button\r\n                            className=\"btn btn-select-location\"\r\n                            onClick={this.onSelectCity.bind(this)}\r\n                          >\r\n                            Select\r\n                          </button>\r\n                        </div>\r\n                        <div ref={arrowProps.ref} style={arrowProps.style} />\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Popper>\r\n              </Manager>\r\n            </div>\r\n          );\r\n        }\r\n      }","E:\\React_Projects\\weather-app\\src\\components\\bottom\\bottom.jsx",[],"E:\\React_Projects\\weather-app\\src\\components\\top\\weather.jsx",["36","37","38","39"],"import React from \"react\";\r\n\r\nimport SunImg from \"../../resources/images/sun.png\";\r\n\r\nexport default class Weather extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n      const { location, temperature, isDay, weather_descriptions, weather_icons } = this.props;\r\n      \r\n        return <div className=\"weather-container\">\r\n            <div className=\"header\">{location}</div>\r\n            <div className=\"inner-container\">\r\n            <div className=\"image\"><img src={weather_icons} /></div>\r\n            <div className=\"current-weather\">{temperature}Â°C</div>\r\n            </div>    \r\n            <div className=\"footer\">{weather_descriptions}</div>\r\n        </div>\r\n    }\r\n}","E:\\React_Projects\\weather-app\\src\\store.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":36,"column":17,"nodeType":"46","messageId":"47","endLine":36,"endColumn":29},{"ruleId":"44","severity":1,"message":"48","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":6,"column":5,"nodeType":"51","messageId":"52","endLine":8,"endColumn":6},{"ruleId":"44","severity":1,"message":"53","line":11,"column":38,"nodeType":"46","messageId":"47","endLine":11,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":16,"column":36,"nodeType":"56","endLine":16,"endColumn":63},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'eventEmitter' is assigned a value but never used.","Identifier","unusedVar","'SunImg' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isDay' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]