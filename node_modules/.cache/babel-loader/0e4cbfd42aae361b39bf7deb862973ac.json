{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\weather-app\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport \"./sass/app.scss\";\nimport axios from \"axios\";\nimport TopSection from \"./components/top/top\";\nimport BottomSection from \"./components/bottom/bottom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_KEY = \"2c2119e198f5ca7ff8622f9055ad2912\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"New York\",\n      isLoading: true\n    };\n  }\n\n  updateWeather() {\n    const {\n      cityName\n    } = this.state;\n    const URL = `http://api.weatherstack.com/current?access_key=${WEATHER_KEY}&query=${cityName}`;\n    axios.get(URL).then(res => {\n      return res.data;\n    }).then(data => {\n      this.setState({\n        isLoading: false,\n        temperature: data.current.temperature,\n        isDay: data.current.is_day,\n        weather_descriptions: data.current.weather_descriptions,\n        weather_icons: data.current.weather_icons\n      });\n    }).catch(err => {\n      if (err) console.error(\"Cannot fetch Weather Data from API kuch nahi aaya,\", err);\n    });\n  }\n\n  componentDidMount() {\n    const {\n      eventEmitter\n    } = this.props;\n    this.updateWeather();\n    eventEmitter.on(\"updateWeather\", data => {\n      this.setState({\n        cityName: data\n      }, () => this.updateWeather());\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      cityName,\n      temperature,\n      isDay,\n      weather_descriptions,\n      weather_icons\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading Weather.... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-section\",\n          children: /*#__PURE__*/_jsxDEV(TopSection, {\n            location: cityName,\n            temperature: temperature,\n            isDay: isDay,\n            weather_descriptions: weather_descriptions,\n            weather_icons: weather_icons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-section\",\n          children: /*#__PURE__*/_jsxDEV(BottomSection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/React_Projects/weather-app/src/App.jsx"],"names":["React","Component","axios","TopSection","BottomSection","WEATHER_KEY","App","constructor","props","state","cityName","isLoading","updateWeather","URL","get","then","res","data","setState","temperature","current","isDay","is_day","weather_descriptions","weather_icons","catch","err","console","error","componentDidMount","eventEmitter","on","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AAEA,OAAO,iBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,WAAW,GAAG,kCAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,UADC;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAM;AAAEF,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAMI,GAAG,GAAI,kDAAiDR,WAAY,UAASK,QAAS,EAA5F;AACAR,IAAAA,KAAK,CACFY,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAX;AACD,KAJH,EAIKF,IAJL,CAIWE,IAAD,IAAU;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE,KADC;AAEZQ,QAAAA,WAAW,EAAEF,IAAI,CAACG,OAAL,CAAaD,WAFd;AAGZE,QAAAA,KAAK,EAAEJ,IAAI,CAACG,OAAL,CAAaE,MAHR;AAIZC,QAAAA,oBAAoB,EAAEN,IAAI,CAACG,OAAL,CAAaG,oBAJvB;AAKZC,QAAAA,aAAa,EAAEP,IAAI,CAACG,OAAL,CAAaI;AALhB,OAAd;AAOD,KAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS;AAChB,UAAGA,GAAH,EAAQC,OAAO,CAACC,KAAR,CAAc,oDAAd,EAAoEF,GAApE;AACT,KAfD;AAgBD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKtB,KAA9B;AAEA,SAAKI,aAAL;AAEAkB,IAAAA,YAAY,CAACC,EAAb,CAAgB,eAAhB,EAAiCd,IAAI,IAAI;AACvC,WAAKC,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAAd,EAAkC,MAAM,KAAKL,aAAL,EAAxC;AACD,KAFD;AAGD;;AAGDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,SAAF;AAAaD,MAAAA,QAAb;AAAuBS,MAAAA,WAAvB;AAAoCE,MAAAA,KAApC;AAA2CE,MAAAA,oBAA3C;AAAiEC,MAAAA;AAAjE,QAAmF,KAAKf,KAA9F;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhB,EAEG,CAACA,SAAD,iBACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,UAAD;AACC,YAAA,QAAQ,EAAED,QADX;AAEC,YAAA,WAAW,EAAES,WAFd;AAGC,YAAA,KAAK,EAAEE,KAHR;AAIC,YAAA,oBAAoB,EAAEE,oBAJvB;AAKC,YAAA,aAAa,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAYE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCAAgC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAkBD;;AA9DyB;;AAiE5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"./sass/app.scss\";\n\nimport axios from \"axios\";\n\nimport TopSection from \"./components/top/top\";\nimport BottomSection from \"./components/bottom/bottom\";\n\nconst WEATHER_KEY = \"2c2119e198f5ca7ff8622f9055ad2912\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"New York\",\n      isLoading: true      \n    };\n  }\n\n  updateWeather() {\n    const { cityName,} = this.state;\n    const URL = `http://api.weatherstack.com/current?access_key=${WEATHER_KEY}&query=${cityName}`;\n    axios\n      .get(URL)\n      .then((res) => {\n        return res.data;\n      }).then((data) => {\n        this.setState({ \n          isLoading: false,\n          temperature: data.current.temperature, \n          isDay: data.current.is_day, \n          weather_descriptions: data.current.weather_descriptions, \n          weather_icons: data.current.weather_icons\n        });\n      })\n      .catch((err) => {\n      if(err) console.error(\"Cannot fetch Weather Data from API kuch nahi aaya,\", err);\n    }); \n  }\n\n  componentDidMount() {\n    const { eventEmitter } = this.props;\n    \n    this.updateWeather();\n\n    eventEmitter.on(\"updateWeather\", data => {\n      this.setState({ cityName: data }, () => this.updateWeather());\n    });\n  }\n\n\n  render() {\n    const { isLoading, cityName, temperature, isDay, weather_descriptions, weather_icons } = this.state;\n\n    return (\n    <div className=\"app-container\">\n      <div className=\"main-container\">\n        {isLoading && <h3>Loading Weather.... </h3>}\n        {!isLoading &&\n        <div className=\"top-section\">\n          <TopSection \n           location={cityName}\n           temperature={temperature} \n           isDay={isDay} \n           weather_descriptions={weather_descriptions} \n           weather_icons={weather_icons} \n          />\n          </div>}\n        <div className=\"bottom-section\"><BottomSection /></div>\n      </div>\n    </div>\n    ); \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}