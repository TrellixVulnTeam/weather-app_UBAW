{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\weather-app\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport \"./sass/app.scss\";\nimport axios from \"axios\";\nimport TopSection from \"./components/top/top\";\nimport BottomSection from \"./components/bottom/bottom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_KEY = \"2c2119e198f5ca7ff8622f9055ad2912\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"London\",\n      forecastDays: 5,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      cityName,\n      forecastDays\n    } = this.state;\n    const URL = `http://api.weatherstack.com/forecast\n    ? access_key = ${WEATHER_KEY}\n    & query = ${cityName} \n    & forecast_days = ${forecastDays}`;\n    axios.get(URL).then(res => {\n      return res.data;\n    }).then(data => {\n      this.setState({\n        isLoading: false,\n        temp_c: data.current.temperature,\n        isDay: data.current.is_day,\n        text: data.current.condition.text,\n        iconURL: data.current.condition.icon\n      });\n    }).catch(err => {\n      if (err) console.error(\"Cannot fetch Weather Data from API,\", err);\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      cityName,\n      temp_c,\n      isDay,\n      text,\n      iconURL\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading Weather.... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-section\",\n          children: /*#__PURE__*/_jsxDEV(TopSection, {\n            location: cityName,\n            temp_c: temp_c,\n            isDay: isDay,\n            text: text,\n            iconURL: iconURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-section\",\n          children: /*#__PURE__*/_jsxDEV(BottomSection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/React_Projects/weather-app/src/App.jsx"],"names":["React","Component","axios","TopSection","BottomSection","WEATHER_KEY","App","constructor","props","state","cityName","forecastDays","isLoading","componentDidMount","URL","get","then","res","data","setState","temp_c","current","temperature","isDay","is_day","text","condition","iconURL","icon","catch","err","console","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AAEA,OAAO,iBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,WAAW,GAAG,kCAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,QADC;AAEXC,MAAAA,YAAY,EAAE,CAFH;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEH,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA6B,KAAKF,KAAxC;AAEA,UAAMK,GAAG,GAAI;AACjB,qBAAqBT,WAAY;AACjC,gBAAgBK,QAAS;AACzB,wBAAwBC,YAAa,EAHjC;AAKAT,IAAAA,KAAK,CACFa,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAX;AACD,KAJH,EAIKF,IAJL,CAIWE,IAAD,IAAU;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE,KADC;AAEZQ,QAAAA,MAAM,EAAEF,IAAI,CAACG,OAAL,CAAaC,WAFT;AAGZC,QAAAA,KAAK,EAAEL,IAAI,CAACG,OAAL,CAAaG,MAHR;AAIZC,QAAAA,IAAI,EAAEP,IAAI,CAACG,OAAL,CAAaK,SAAb,CAAuBD,IAJjB;AAKZE,QAAAA,OAAO,EAAET,IAAI,CAACG,OAAL,CAAaK,SAAb,CAAuBE;AALpB,OAAd;AAOD,KAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS;AAChB,UAAGA,GAAH,EACEC,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,GAArD;AACH,KAhBD;AAiBD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAErB,MAAAA,SAAF;AAAaF,MAAAA,QAAb;AAAuBU,MAAAA,MAAvB;AAA+BG,MAAAA,KAA/B;AAAsCE,MAAAA,IAAtC;AAA4CE,MAAAA;AAA5C,QAAwD,KAAKlB,KAAnE;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACGG,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhB,EAEG,CAACA,SAAD,iBACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,UAAD;AACC,YAAA,QAAQ,EAAEF,QADX;AAEA,YAAA,MAAM,EAAEU,MAFR;AAGA,YAAA,KAAK,EAAEG,KAHP;AAIA,YAAA,IAAI,EAAEE,IAJN;AAKA,YAAA,OAAO,EAAEE;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAYE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCAAgC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAkBD;;AA3DyB;;AA8D5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"./sass/app.scss\";\n\nimport axios from \"axios\";\n\n\nimport TopSection from \"./components/top/top\";\nimport BottomSection from \"./components/bottom/bottom\";\n\nconst WEATHER_KEY = \"2c2119e198f5ca7ff8622f9055ad2912\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"London\",\n      forecastDays: 5,\n      isLoading: true      \n    }\n  }\n\n  componentDidMount() {\n    const { cityName, forecastDays } = this.state;\n\n    const URL = `http://api.weatherstack.com/forecast\n    ? access_key = ${WEATHER_KEY}\n    & query = ${cityName} \n    & forecast_days = ${forecastDays}`;\n\n    axios\n      .get(URL)\n      .then((res) => {\n        return res.data;\n      }).then((data) => {\n        this.setState({ \n          isLoading: false,\n          temp_c: data.current.temperature, \n          isDay: data.current.is_day, \n          text: data.current.condition.text, \n          iconURL: data.current.condition.icon \n        });\n      })\n      .catch((err) => {\n      if(err)\n        console.error(\"Cannot fetch Weather Data from API,\", err);\n    }) \n  }\n\n  render() {\n\n    const { isLoading, cityName, temp_c, isDay, text, iconURL } = this.state;\n\n    return (\n    <div className=\"app-container\">\n      <div className=\"main-container\">\n        {isLoading && <h3>Loading Weather.... </h3>}\n        {!isLoading &&\n        <div className=\"top-section\">\n          <TopSection \n           location={cityName}\n          temp_c={temp_c} \n          isDay={isDay} \n          text={text} \n          iconURL={iconURL} \n          />\n          </div>}\n        <div className=\"bottom-section\"><BottomSection /></div>\n      </div>\n    </div>\n    ); \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}