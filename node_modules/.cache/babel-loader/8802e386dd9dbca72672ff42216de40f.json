{"ast":null,"code":"var _jsxFileName = \"E:\\\\React_Projects\\\\weather-app\\\\src\\\\components\\\\top\\\\top.jsx\";\nimport React from \"react\";\nimport \"./style.scss\";\nimport Weather from \"./weather\";\nimport { Manager, Reference, Popper } from \"react-popper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TopSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelectLocationOpen: false\n    };\n  }\n\n  onToggleSelectLocation() {\n    this.setState(prevState => ({\n      isSelectLocationOpen: !prevState.isSelectLocationOpen\n    }));\n  }\n\n  onLocationNameChange(e) {\n    this.setState({\n      locationName: e.target.value\n    });\n  }\n\n  onSelectCity() {\n    const {\n      locationName\n    } = this.state;\n    const {\n      eventEmitter\n    } = this.props;\n    eventEmitter.emit(\"updateWeather\", locationName);\n    this.setState({\n      isSelectLocationOpen: false\n    });\n  }\n\n  render() {\n    const {\n      isSelectLocationOpen\n    } = this.state;\n    const {\n      eventEmitter\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Weather Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Weather, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Manager, {\n        children: [/*#__PURE__*/_jsxDEV(Reference, {\n          children: ({\n            ref\n          }) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-select-location\",\n            ref: ref,\n            onClick: this.onToggleSelectLocation.bind(this),\n            children: \"Select Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Popper, {\n          placement: \"top\",\n          children: ({\n            ref,\n            style,\n            placement,\n            arrowProps\n          }) => isSelectLocationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-container\",\n            ref: ref,\n            style: style,\n            \"data-placement\": placement,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"location-name\",\n                children: \"Location Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"location-name\",\n                type: \"text\",\n                placeholder: \"City Name\",\n                onChange: this.onLocationNameChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-select-location\",\n                onClick: this.onSelectCity.bind(this),\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: arrowProps.ref,\n              style: arrowProps.style\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/React_Projects/weather-app/src/components/top/top.jsx"],"names":["React","Weather","Manager","Reference","Popper","TopSection","Component","constructor","props","state","isSelectLocationOpen","onToggleSelectLocation","setState","prevState","onLocationNameChange","e","locationName","target","value","onSelectCity","eventEmitter","emit","render","ref","bind","style","placement","arrowProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,cAA3C;;AAEA,eAAe,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,oBAAoB,EAAE;AADb,KAAb;AAGH;;AAEDC,EAAAA,sBAAsB,GAAG;AACrB,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BH,MAAAA,oBAAoB,EAAE,CAACG,SAAS,CAACH;AADP,KAAL,CAAvB;AAGD;;AAEDI,EAAAA,oBAAoB,CAACC,CAAD,EAAI;AACtB,SAAKH,QAAL,CAAc;AACZI,MAAAA,YAAY,EAAED,CAAC,CAACE,MAAF,CAASC;AADX,KAAd;AAGD;;AAEDC,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEH,MAAAA;AAAF,QAAmB,KAAKP,KAA9B;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAmB,KAAKZ,KAA9B;AACAY,IAAAA,YAAY,CAACC,IAAb,CAAkB,eAAlB,EAAmCL,YAAnC;AACA,SAAKJ,QAAL,CAAc;AAAEF,MAAAA,oBAAoB,EAAE;AAAxB,KAAd;AACD;;AAEHY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA;AAAF,QAA2B,KAAKD,KAAtC;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAmB,KAAKZ,KAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD,OAAa,KAAKA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBACG,CAAC;AAAEe,YAAAA;AAAF,WAAD,kBACC;AACE,YAAA,SAAS,EAAC,yBADZ;AAEE,YAAA,GAAG,EAAEA,GAFP;AAGE,YAAA,OAAO,EAAE,KAAKZ,sBAAL,CAA4Ba,IAA5B,CAAiC,IAAjC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA,oBACG,CAAC;AAAED,YAAAA,GAAF;AAAOE,YAAAA,KAAP;AAAcC,YAAAA,SAAd;AAAyBC,YAAAA;AAAzB,WAAD,KACCjB,oBAAoB,iBAClB;AACE,YAAA,SAAS,EAAC,iBADZ;AAEE,YAAA,GAAG,EAAEa,GAFP;AAGE,YAAA,KAAK,EAAEE,KAHT;AAIE,8BAAgBC,SAJlB;AAAA,oCAME;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,EAAE,EAAC,eADL;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,WAAW,EAAC,WAHd;AAIE,gBAAA,QAAQ,EAAE,KAAKZ,oBAAL,CAA0BU,IAA1B,CAA+B,IAA/B;AAJZ;AAAA;AAAA;AAAA;AAAA,sBAFF,eAQE;AACE,gBAAA,SAAS,EAAC,yBADZ;AAEE,gBAAA,OAAO,EAAE,KAAKL,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAqBE;AAAK,cAAA,GAAG,EAAEG,UAAU,CAACJ,GAArB;AAA0B,cAAA,KAAK,EAAEI,UAAU,CAACF;AAA5C;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgDC;;AA/E+C","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Weather from \"./weather\"\r\n\r\nimport { Manager, Reference, Popper } from \"react-popper\";\r\n\r\nexport default class TopSection extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSelectLocationOpen: false\r\n        };\r\n    }\r\n\r\n    onToggleSelectLocation() {\r\n        this.setState(prevState => ({\r\n          isSelectLocationOpen: !prevState.isSelectLocationOpen\r\n        }));\r\n      }\r\n    \r\n      onLocationNameChange(e) {\r\n        this.setState({\r\n          locationName: e.target.value\r\n        });\r\n      }\r\n    \r\n      onSelectCity() {\r\n        const { locationName } = this.state;\r\n        const { eventEmitter } = this.props;\r\n        eventEmitter.emit(\"updateWeather\", locationName);\r\n        this.setState({ isSelectLocationOpen: false });\r\n      }\r\n\r\n    render() {\r\n        const { isSelectLocationOpen } = this.state;\r\n        const { eventEmitter } = this.props;\r\n        return (\r\n            <div className=\"top-container\">\r\n              <div className=\"title\">Weather Up</div>\r\n              <Weather {...this.props} />\r\n              <Manager>\r\n                <Reference>\r\n                  {({ ref }) => (\r\n                    <button\r\n                      className=\"btn btn-select-location\"\r\n                      ref={ref}\r\n                      onClick={this.onToggleSelectLocation.bind(this)}\r\n                    >\r\n                      Select Location\r\n                    </button>\r\n                  )}\r\n                </Reference>\r\n                <Popper placement=\"top\">\r\n                  {({ ref, style, placement, arrowProps }) =>\r\n                    isSelectLocationOpen && (\r\n                      <div\r\n                        className=\"popup-container\"\r\n                        ref={ref}\r\n                        style={style}\r\n                        data-placement={placement}\r\n                      >\r\n                        <div className=\"form-container\">\r\n                          <label htmlFor=\"location-name\">Location Name</label>\r\n                          <input\r\n                            id=\"location-name\"\r\n                            type=\"text\"\r\n                            placeholder=\"City Name\"\r\n                            onChange={this.onLocationNameChange.bind(this)}\r\n                          />\r\n                          <button\r\n                            className=\"btn btn-select-location\"\r\n                            onClick={this.onSelectCity.bind(this)}\r\n                          >\r\n                            Select\r\n                          </button>\r\n                        </div>\r\n                        <div ref={arrowProps.ref} style={arrowProps.style} />\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Popper>\r\n              </Manager>\r\n            </div>\r\n          );\r\n        }\r\n      }"]},"metadata":{},"sourceType":"module"}